// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/vesting/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/msg/v1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/bank/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file evmos/inflation/v1/query.proto (package evmos.inflation.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { DecCoin } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/v1beta1/coin_pb.js";
import type { Params } from "./genesis_pb.js";

/**
 * QueryPeriodRequest is the request type for the Query/Period RPC method.
 *
 * @generated from message evmos.inflation.v1.QueryPeriodRequest
 */
export declare class QueryPeriodRequest extends Message<QueryPeriodRequest> {
  constructor(data?: PartialMessage<QueryPeriodRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryPeriodRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPeriodRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPeriodRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPeriodRequest;

  static equals(a: QueryPeriodRequest | PlainMessage<QueryPeriodRequest> | undefined, b: QueryPeriodRequest | PlainMessage<QueryPeriodRequest> | undefined): boolean;
}

/**
 * QueryPeriodResponse is the response type for the Query/Period RPC method.
 *
 * @generated from message evmos.inflation.v1.QueryPeriodResponse
 */
export declare class QueryPeriodResponse extends Message<QueryPeriodResponse> {
  /**
   * period is the current minting per epoch provision value.
   *
   * @generated from field: uint64 period = 1;
   */
  period: bigint;

  constructor(data?: PartialMessage<QueryPeriodResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryPeriodResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPeriodResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPeriodResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPeriodResponse;

  static equals(a: QueryPeriodResponse | PlainMessage<QueryPeriodResponse> | undefined, b: QueryPeriodResponse | PlainMessage<QueryPeriodResponse> | undefined): boolean;
}

/**
 * QueryEpochMintProvisionRequest is the request type for the
 * Query/EpochMintProvision RPC method.
 *
 * @generated from message evmos.inflation.v1.QueryEpochMintProvisionRequest
 */
export declare class QueryEpochMintProvisionRequest extends Message<QueryEpochMintProvisionRequest> {
  constructor(data?: PartialMessage<QueryEpochMintProvisionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryEpochMintProvisionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryEpochMintProvisionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryEpochMintProvisionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryEpochMintProvisionRequest;

  static equals(a: QueryEpochMintProvisionRequest | PlainMessage<QueryEpochMintProvisionRequest> | undefined, b: QueryEpochMintProvisionRequest | PlainMessage<QueryEpochMintProvisionRequest> | undefined): boolean;
}

/**
 * QueryEpochMintProvisionResponse is the response type for the
 * Query/EpochMintProvision RPC method.
 *
 * @generated from message evmos.inflation.v1.QueryEpochMintProvisionResponse
 */
export declare class QueryEpochMintProvisionResponse extends Message<QueryEpochMintProvisionResponse> {
  /**
   * epoch_mint_provision is the current minting per epoch provision value.
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin epoch_mint_provision = 1;
   */
  epochMintProvision?: DecCoin;

  constructor(data?: PartialMessage<QueryEpochMintProvisionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryEpochMintProvisionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryEpochMintProvisionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryEpochMintProvisionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryEpochMintProvisionResponse;

  static equals(a: QueryEpochMintProvisionResponse | PlainMessage<QueryEpochMintProvisionResponse> | undefined, b: QueryEpochMintProvisionResponse | PlainMessage<QueryEpochMintProvisionResponse> | undefined): boolean;
}

/**
 * QuerySkippedEpochsRequest is the request type for the Query/SkippedEpochs RPC
 * method.
 *
 * @generated from message evmos.inflation.v1.QuerySkippedEpochsRequest
 */
export declare class QuerySkippedEpochsRequest extends Message<QuerySkippedEpochsRequest> {
  constructor(data?: PartialMessage<QuerySkippedEpochsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QuerySkippedEpochsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySkippedEpochsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySkippedEpochsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySkippedEpochsRequest;

  static equals(a: QuerySkippedEpochsRequest | PlainMessage<QuerySkippedEpochsRequest> | undefined, b: QuerySkippedEpochsRequest | PlainMessage<QuerySkippedEpochsRequest> | undefined): boolean;
}

/**
 * QuerySkippedEpochsResponse is the response type for the Query/SkippedEpochs
 * RPC method.
 *
 * @generated from message evmos.inflation.v1.QuerySkippedEpochsResponse
 */
export declare class QuerySkippedEpochsResponse extends Message<QuerySkippedEpochsResponse> {
  /**
   * skipped_epochs is the number of epochs that the inflation module has been disabled.
   *
   * @generated from field: uint64 skipped_epochs = 1;
   */
  skippedEpochs: bigint;

  constructor(data?: PartialMessage<QuerySkippedEpochsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QuerySkippedEpochsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySkippedEpochsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySkippedEpochsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySkippedEpochsResponse;

  static equals(a: QuerySkippedEpochsResponse | PlainMessage<QuerySkippedEpochsResponse> | undefined, b: QuerySkippedEpochsResponse | PlainMessage<QuerySkippedEpochsResponse> | undefined): boolean;
}

/**
 * QueryCirculatingSupplyRequest is the request type for the
 * Query/CirculatingSupply RPC method.
 *
 * @generated from message evmos.inflation.v1.QueryCirculatingSupplyRequest
 */
export declare class QueryCirculatingSupplyRequest extends Message<QueryCirculatingSupplyRequest> {
  constructor(data?: PartialMessage<QueryCirculatingSupplyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryCirculatingSupplyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryCirculatingSupplyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryCirculatingSupplyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryCirculatingSupplyRequest;

  static equals(a: QueryCirculatingSupplyRequest | PlainMessage<QueryCirculatingSupplyRequest> | undefined, b: QueryCirculatingSupplyRequest | PlainMessage<QueryCirculatingSupplyRequest> | undefined): boolean;
}

/**
 * QueryCirculatingSupplyResponse is the response type for the
 * Query/CirculatingSupply RPC method.
 *
 * @generated from message evmos.inflation.v1.QueryCirculatingSupplyResponse
 */
export declare class QueryCirculatingSupplyResponse extends Message<QueryCirculatingSupplyResponse> {
  /**
   * circulating_supply is the total amount of coins in circulation
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin circulating_supply = 1;
   */
  circulatingSupply?: DecCoin;

  constructor(data?: PartialMessage<QueryCirculatingSupplyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryCirculatingSupplyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryCirculatingSupplyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryCirculatingSupplyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryCirculatingSupplyResponse;

  static equals(a: QueryCirculatingSupplyResponse | PlainMessage<QueryCirculatingSupplyResponse> | undefined, b: QueryCirculatingSupplyResponse | PlainMessage<QueryCirculatingSupplyResponse> | undefined): boolean;
}

/**
 * QueryInflationRateRequest is the request type for the Query/InflationRate RPC
 * method.
 *
 * @generated from message evmos.inflation.v1.QueryInflationRateRequest
 */
export declare class QueryInflationRateRequest extends Message<QueryInflationRateRequest> {
  constructor(data?: PartialMessage<QueryInflationRateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryInflationRateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryInflationRateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryInflationRateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryInflationRateRequest;

  static equals(a: QueryInflationRateRequest | PlainMessage<QueryInflationRateRequest> | undefined, b: QueryInflationRateRequest | PlainMessage<QueryInflationRateRequest> | undefined): boolean;
}

/**
 * QueryInflationRateResponse is the response type for the Query/InflationRate
 * RPC method.
 *
 * @generated from message evmos.inflation.v1.QueryInflationRateResponse
 */
export declare class QueryInflationRateResponse extends Message<QueryInflationRateResponse> {
  /**
   * inflation_rate by which the total supply increases within one period
   *
   * @generated from field: string inflation_rate = 1;
   */
  inflationRate: string;

  constructor(data?: PartialMessage<QueryInflationRateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryInflationRateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryInflationRateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryInflationRateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryInflationRateResponse;

  static equals(a: QueryInflationRateResponse | PlainMessage<QueryInflationRateResponse> | undefined, b: QueryInflationRateResponse | PlainMessage<QueryInflationRateResponse> | undefined): boolean;
}

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message evmos.inflation.v1.QueryParamsRequest
 */
export declare class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryParamsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean;
}

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message evmos.inflation.v1.QueryParamsResponse
 */
export declare class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params defines the parameters of the module.
   *
   * @generated from field: evmos.inflation.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.inflation.v1.QueryParamsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean;
}

