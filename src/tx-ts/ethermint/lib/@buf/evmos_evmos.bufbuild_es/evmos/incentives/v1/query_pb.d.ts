// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/vesting/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/msg/v1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/bank/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file evmos/incentives/v1/query.proto (package evmos.incentives.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { PageRequest, PageResponse } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/query/v1beta1/pagination_pb.js";
import type { GasMeter, Incentive } from "./incentives_pb.js";
import type { DecCoin } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/v1beta1/coin_pb.js";
import type { Params } from "./genesis_pb.js";

/**
 * QueryIncentivesRequest is the request type for the Query/Incentives RPC
 * method.
 *
 * @generated from message evmos.incentives.v1.QueryIncentivesRequest
 */
export declare class QueryIncentivesRequest extends Message<QueryIncentivesRequest> {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryIncentivesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryIncentivesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryIncentivesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryIncentivesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryIncentivesRequest;

  static equals(a: QueryIncentivesRequest | PlainMessage<QueryIncentivesRequest> | undefined, b: QueryIncentivesRequest | PlainMessage<QueryIncentivesRequest> | undefined): boolean;
}

/**
 * QueryIncentivesResponse is the response type for the Query/Incentives RPC
 * method.
 *
 * @generated from message evmos.incentives.v1.QueryIncentivesResponse
 */
export declare class QueryIncentivesResponse extends Message<QueryIncentivesResponse> {
  /**
   * incentives is a slice of all incentives
   *
   * @generated from field: repeated evmos.incentives.v1.Incentive incentives = 1;
   */
  incentives: Incentive[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryIncentivesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryIncentivesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryIncentivesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryIncentivesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryIncentivesResponse;

  static equals(a: QueryIncentivesResponse | PlainMessage<QueryIncentivesResponse> | undefined, b: QueryIncentivesResponse | PlainMessage<QueryIncentivesResponse> | undefined): boolean;
}

/**
 * QueryIncentiveRequest is the request type for the Query/Incentive RPC method.
 *
 * @generated from message evmos.incentives.v1.QueryIncentiveRequest
 */
export declare class QueryIncentiveRequest extends Message<QueryIncentiveRequest> {
  /**
   * contract is the hex contract address of a incentivized smart contract
   *
   * @generated from field: string contract = 1;
   */
  contract: string;

  constructor(data?: PartialMessage<QueryIncentiveRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryIncentiveRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryIncentiveRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryIncentiveRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryIncentiveRequest;

  static equals(a: QueryIncentiveRequest | PlainMessage<QueryIncentiveRequest> | undefined, b: QueryIncentiveRequest | PlainMessage<QueryIncentiveRequest> | undefined): boolean;
}

/**
 * QueryIncentiveResponse is the response type for the Query/Incentive RPC
 * method.
 *
 * @generated from message evmos.incentives.v1.QueryIncentiveResponse
 */
export declare class QueryIncentiveResponse extends Message<QueryIncentiveResponse> {
  /**
   * incentive is the returned incentive for the queried contract
   *
   * @generated from field: evmos.incentives.v1.Incentive incentive = 1;
   */
  incentive?: Incentive;

  constructor(data?: PartialMessage<QueryIncentiveResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryIncentiveResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryIncentiveResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryIncentiveResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryIncentiveResponse;

  static equals(a: QueryIncentiveResponse | PlainMessage<QueryIncentiveResponse> | undefined, b: QueryIncentiveResponse | PlainMessage<QueryIncentiveResponse> | undefined): boolean;
}

/**
 * QueryGasMetersRequest is the request type for the Query/Incentives RPC
 * method.
 *
 * @generated from message evmos.incentives.v1.QueryGasMetersRequest
 */
export declare class QueryGasMetersRequest extends Message<QueryGasMetersRequest> {
  /**
   * contract is the hex contract address of a incentivized smart contract
   *
   * @generated from field: string contract = 1;
   */
  contract: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryGasMetersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryGasMetersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGasMetersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGasMetersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGasMetersRequest;

  static equals(a: QueryGasMetersRequest | PlainMessage<QueryGasMetersRequest> | undefined, b: QueryGasMetersRequest | PlainMessage<QueryGasMetersRequest> | undefined): boolean;
}

/**
 * QueryGasMetersResponse is the response type for the Query/Incentives RPC
 * method.
 *
 * @generated from message evmos.incentives.v1.QueryGasMetersResponse
 */
export declare class QueryGasMetersResponse extends Message<QueryGasMetersResponse> {
  /**
   * gas_meters is a slice of the gas meters for an incentivized smart contract
   *
   * @generated from field: repeated evmos.incentives.v1.GasMeter gas_meters = 1;
   */
  gasMeters: GasMeter[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryGasMetersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryGasMetersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGasMetersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGasMetersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGasMetersResponse;

  static equals(a: QueryGasMetersResponse | PlainMessage<QueryGasMetersResponse> | undefined, b: QueryGasMetersResponse | PlainMessage<QueryGasMetersResponse> | undefined): boolean;
}

/**
 * QueryGasMeterRequest is the request type for the Query/Incentive RPC method.
 *
 * @generated from message evmos.incentives.v1.QueryGasMeterRequest
 */
export declare class QueryGasMeterRequest extends Message<QueryGasMeterRequest> {
  /**
   * contract is the hex contract address of a contract
   *
   * @generated from field: string contract = 1;
   */
  contract: string;

  /**
   * participant is the hex address of a user
   *
   * @generated from field: string participant = 2;
   */
  participant: string;

  constructor(data?: PartialMessage<QueryGasMeterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryGasMeterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGasMeterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGasMeterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGasMeterRequest;

  static equals(a: QueryGasMeterRequest | PlainMessage<QueryGasMeterRequest> | undefined, b: QueryGasMeterRequest | PlainMessage<QueryGasMeterRequest> | undefined): boolean;
}

/**
 * QueryGasMeterResponse is the response type for the Query/Incentive RPC
 * method.
 *
 * @generated from message evmos.incentives.v1.QueryGasMeterResponse
 */
export declare class QueryGasMeterResponse extends Message<QueryGasMeterResponse> {
  /**
   * gas_meter is a gas meter for one participant on an incentivized smart contract
   *
   * @generated from field: uint64 gas_meter = 1;
   */
  gasMeter: bigint;

  constructor(data?: PartialMessage<QueryGasMeterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryGasMeterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGasMeterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGasMeterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGasMeterResponse;

  static equals(a: QueryGasMeterResponse | PlainMessage<QueryGasMeterResponse> | undefined, b: QueryGasMeterResponse | PlainMessage<QueryGasMeterResponse> | undefined): boolean;
}

/**
 * QueryAllocationMetersRequest is the request type for the
 * Query/AllocationMeters RPC method.
 *
 * @generated from message evmos.incentives.v1.QueryAllocationMetersRequest
 */
export declare class QueryAllocationMetersRequest extends Message<QueryAllocationMetersRequest> {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllocationMetersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryAllocationMetersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllocationMetersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllocationMetersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllocationMetersRequest;

  static equals(a: QueryAllocationMetersRequest | PlainMessage<QueryAllocationMetersRequest> | undefined, b: QueryAllocationMetersRequest | PlainMessage<QueryAllocationMetersRequest> | undefined): boolean;
}

/**
 * QueryAllocationMetersResponse is the response type for the
 * Query/AllocationMeters RPC method.
 *
 * @generated from message evmos.incentives.v1.QueryAllocationMetersResponse
 */
export declare class QueryAllocationMetersResponse extends Message<QueryAllocationMetersResponse> {
  /**
   * allocation_meters is a slice of all allocations
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin allocation_meters = 1;
   */
  allocationMeters: DecCoin[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllocationMetersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryAllocationMetersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllocationMetersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllocationMetersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllocationMetersResponse;

  static equals(a: QueryAllocationMetersResponse | PlainMessage<QueryAllocationMetersResponse> | undefined, b: QueryAllocationMetersResponse | PlainMessage<QueryAllocationMetersResponse> | undefined): boolean;
}

/**
 * QueryAllocationMeterRequest is the request type for the Query/AllocationMeter
 * RPC method.
 *
 * @generated from message evmos.incentives.v1.QueryAllocationMeterRequest
 */
export declare class QueryAllocationMeterRequest extends Message<QueryAllocationMeterRequest> {
  /**
   * denom is the coin denom to query an allocation meter for.
   *
   * @generated from field: string denom = 1;
   */
  denom: string;

  constructor(data?: PartialMessage<QueryAllocationMeterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryAllocationMeterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllocationMeterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllocationMeterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllocationMeterRequest;

  static equals(a: QueryAllocationMeterRequest | PlainMessage<QueryAllocationMeterRequest> | undefined, b: QueryAllocationMeterRequest | PlainMessage<QueryAllocationMeterRequest> | undefined): boolean;
}

/**
 * QueryAllocationMeterResponse is the response type for the
 * Query/AllocationMeter RPC method.
 *
 * @generated from message evmos.incentives.v1.QueryAllocationMeterResponse
 */
export declare class QueryAllocationMeterResponse extends Message<QueryAllocationMeterResponse> {
  /**
   * allocation_meter defines the allocation of the queried denom
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin allocation_meter = 1;
   */
  allocationMeter?: DecCoin;

  constructor(data?: PartialMessage<QueryAllocationMeterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryAllocationMeterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllocationMeterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllocationMeterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllocationMeterResponse;

  static equals(a: QueryAllocationMeterResponse | PlainMessage<QueryAllocationMeterResponse> | undefined, b: QueryAllocationMeterResponse | PlainMessage<QueryAllocationMeterResponse> | undefined): boolean;
}

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message evmos.incentives.v1.QueryParamsRequest
 */
export declare class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryParamsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean;
}

/**
 * QueryParamsResponse is the response type for the Query/Params RPC
 * method.
 *
 * @generated from message evmos.incentives.v1.QueryParamsResponse
 */
export declare class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params are the incentives module parameters
   *
   * @generated from field: evmos.incentives.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.QueryParamsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean;
}

