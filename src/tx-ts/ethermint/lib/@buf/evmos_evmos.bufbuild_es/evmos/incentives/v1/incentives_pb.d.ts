// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/vesting/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/msg/v1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/bank/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file evmos/incentives/v1/incentives.proto (package evmos.incentives.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { DecCoin } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/v1beta1/coin_pb.js";

/**
 * Incentive defines an instance that organizes distribution conditions for a
 * given smart contract
 *
 * @generated from message evmos.incentives.v1.Incentive
 */
export declare class Incentive extends Message<Incentive> {
  /**
   * contract address of the smart contract to be incentivized
   *
   * @generated from field: string contract = 1;
   */
  contract: string;

  /**
   * allocations is a slice of denoms and percentages of rewards to be allocated
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin allocations = 2;
   */
  allocations: DecCoin[];

  /**
   * epochs defines the number of remaining epochs for the incentive
   *
   * @generated from field: uint32 epochs = 3;
   */
  epochs: number;

  /**
   * start_time of the incentive distribution
   *
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * total_gas is the cumulative gas spent by all gas meters of the incentive during the epoch
   *
   * @generated from field: uint64 total_gas = 5;
   */
  totalGas: bigint;

  constructor(data?: PartialMessage<Incentive>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.Incentive";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Incentive;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Incentive;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Incentive;

  static equals(a: Incentive | PlainMessage<Incentive> | undefined, b: Incentive | PlainMessage<Incentive> | undefined): boolean;
}

/**
 * GasMeter tracks the cumulative gas spent per participant in one epoch
 *
 * @generated from message evmos.incentives.v1.GasMeter
 */
export declare class GasMeter extends Message<GasMeter> {
  /**
   * contract is the hex address of the incentivized smart contract
   *
   * @generated from field: string contract = 1;
   */
  contract: string;

  /**
   * participant address that interacts with the incentive
   *
   * @generated from field: string participant = 2;
   */
  participant: string;

  /**
   * cumulative_gas spent during the epoch
   *
   * @generated from field: uint64 cumulative_gas = 3;
   */
  cumulativeGas: bigint;

  constructor(data?: PartialMessage<GasMeter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.GasMeter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GasMeter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GasMeter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GasMeter;

  static equals(a: GasMeter | PlainMessage<GasMeter> | undefined, b: GasMeter | PlainMessage<GasMeter> | undefined): boolean;
}

/**
 * RegisterIncentiveProposal is a gov Content type to register an incentive
 *
 * @generated from message evmos.incentives.v1.RegisterIncentiveProposal
 */
export declare class RegisterIncentiveProposal extends Message<RegisterIncentiveProposal> {
  /**
   * title of the proposal
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * description of the proposal
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * contract address to be registered
   *
   * @generated from field: string contract = 3;
   */
  contract: string;

  /**
   * allocations defines the denoms and percentage of rewards to be allocated
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin allocations = 4;
   */
  allocations: DecCoin[];

  /**
   * epochs is the number of remaining epochs for the incentive
   *
   * @generated from field: uint32 epochs = 5;
   */
  epochs: number;

  constructor(data?: PartialMessage<RegisterIncentiveProposal>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.RegisterIncentiveProposal";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterIncentiveProposal;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterIncentiveProposal;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterIncentiveProposal;

  static equals(a: RegisterIncentiveProposal | PlainMessage<RegisterIncentiveProposal> | undefined, b: RegisterIncentiveProposal | PlainMessage<RegisterIncentiveProposal> | undefined): boolean;
}

/**
 * CancelIncentiveProposal is a gov Content type to cancel an incentive
 *
 * @generated from message evmos.incentives.v1.CancelIncentiveProposal
 */
export declare class CancelIncentiveProposal extends Message<CancelIncentiveProposal> {
  /**
   * title of the proposal
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * description of the proposal
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * contract address of the incentivized smart contract
   *
   * @generated from field: string contract = 3;
   */
  contract: string;

  constructor(data?: PartialMessage<CancelIncentiveProposal>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.incentives.v1.CancelIncentiveProposal";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelIncentiveProposal;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelIncentiveProposal;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelIncentiveProposal;

  static equals(a: CancelIncentiveProposal | PlainMessage<CancelIncentiveProposal> | undefined, b: CancelIncentiveProposal | PlainMessage<CancelIncentiveProposal> | undefined): boolean;
}

