// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/vesting/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/msg/v1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/bank/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file evmos/erc20/v1/query.proto (package evmos.erc20.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { PageRequest, PageResponse } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/query/v1beta1/pagination_pb.js";
import type { TokenPair } from "./erc20_pb.js";
import type { Params } from "./genesis_pb.js";

/**
 * QueryTokenPairsRequest is the request type for the Query/TokenPairs RPC
 * method.
 *
 * @generated from message evmos.erc20.v1.QueryTokenPairsRequest
 */
export declare class QueryTokenPairsRequest extends Message<QueryTokenPairsRequest> {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryTokenPairsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.QueryTokenPairsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTokenPairsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTokenPairsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTokenPairsRequest;

  static equals(a: QueryTokenPairsRequest | PlainMessage<QueryTokenPairsRequest> | undefined, b: QueryTokenPairsRequest | PlainMessage<QueryTokenPairsRequest> | undefined): boolean;
}

/**
 * QueryTokenPairsResponse is the response type for the Query/TokenPairs RPC
 * method.
 *
 * @generated from message evmos.erc20.v1.QueryTokenPairsResponse
 */
export declare class QueryTokenPairsResponse extends Message<QueryTokenPairsResponse> {
  /**
   * token_pairs is a slice of registered token pairs for the erc20 module
   *
   * @generated from field: repeated evmos.erc20.v1.TokenPair token_pairs = 1;
   */
  tokenPairs: TokenPair[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryTokenPairsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.QueryTokenPairsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTokenPairsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTokenPairsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTokenPairsResponse;

  static equals(a: QueryTokenPairsResponse | PlainMessage<QueryTokenPairsResponse> | undefined, b: QueryTokenPairsResponse | PlainMessage<QueryTokenPairsResponse> | undefined): boolean;
}

/**
 * QueryTokenPairRequest is the request type for the Query/TokenPair RPC method.
 *
 * @generated from message evmos.erc20.v1.QueryTokenPairRequest
 */
export declare class QueryTokenPairRequest extends Message<QueryTokenPairRequest> {
  /**
   * token identifier can be either the hex contract address of the ERC20 or the
   * Cosmos base denomination
   *
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<QueryTokenPairRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.QueryTokenPairRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTokenPairRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTokenPairRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTokenPairRequest;

  static equals(a: QueryTokenPairRequest | PlainMessage<QueryTokenPairRequest> | undefined, b: QueryTokenPairRequest | PlainMessage<QueryTokenPairRequest> | undefined): boolean;
}

/**
 * QueryTokenPairResponse is the response type for the Query/TokenPair RPC
 * method.
 *
 * @generated from message evmos.erc20.v1.QueryTokenPairResponse
 */
export declare class QueryTokenPairResponse extends Message<QueryTokenPairResponse> {
  /**
   * token_pairs returns the info about a registered token pair for the erc20 module
   *
   * @generated from field: evmos.erc20.v1.TokenPair token_pair = 1;
   */
  tokenPair?: TokenPair;

  constructor(data?: PartialMessage<QueryTokenPairResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.QueryTokenPairResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTokenPairResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTokenPairResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTokenPairResponse;

  static equals(a: QueryTokenPairResponse | PlainMessage<QueryTokenPairResponse> | undefined, b: QueryTokenPairResponse | PlainMessage<QueryTokenPairResponse> | undefined): boolean;
}

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message evmos.erc20.v1.QueryParamsRequest
 */
export declare class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.QueryParamsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean;
}

/**
 * QueryParamsResponse is the response type for the Query/Params RPC
 * method.
 *
 * @generated from message evmos.erc20.v1.QueryParamsResponse
 */
export declare class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params are the erc20 module parameters
   *
   * @generated from field: evmos.erc20.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.QueryParamsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean;
}

