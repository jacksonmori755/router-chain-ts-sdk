// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/vesting/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/msg/v1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/bank/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file evmos/erc20/v1/tx.proto (package evmos.erc20.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Coin } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/v1beta1/coin_pb.js";
import type { Params } from "./genesis_pb.js";

/**
 * MsgConvertCoin defines a Msg to convert a native Cosmos coin to a ERC20 token
 *
 * @generated from message evmos.erc20.v1.MsgConvertCoin
 */
export declare class MsgConvertCoin extends Message<MsgConvertCoin> {
  /**
   * coin is a Cosmos coin whose denomination is registered in a token pair. The coin
   * amount defines the amount of coins to convert.
   *
   * @generated from field: cosmos.base.v1beta1.Coin coin = 1;
   */
  coin?: Coin;

  /**
   * receiver is the hex address to receive ERC20 token
   *
   * @generated from field: string receiver = 2;
   */
  receiver: string;

  /**
   * sender is the cosmos bech32 address from the owner of the given Cosmos coins
   *
   * @generated from field: string sender = 3;
   */
  sender: string;

  constructor(data?: PartialMessage<MsgConvertCoin>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.MsgConvertCoin";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertCoin;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertCoin;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertCoin;

  static equals(a: MsgConvertCoin | PlainMessage<MsgConvertCoin> | undefined, b: MsgConvertCoin | PlainMessage<MsgConvertCoin> | undefined): boolean;
}

/**
 * MsgConvertCoinResponse returns no fields
 *
 * @generated from message evmos.erc20.v1.MsgConvertCoinResponse
 */
export declare class MsgConvertCoinResponse extends Message<MsgConvertCoinResponse> {
  constructor(data?: PartialMessage<MsgConvertCoinResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.MsgConvertCoinResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertCoinResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertCoinResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertCoinResponse;

  static equals(a: MsgConvertCoinResponse | PlainMessage<MsgConvertCoinResponse> | undefined, b: MsgConvertCoinResponse | PlainMessage<MsgConvertCoinResponse> | undefined): boolean;
}

/**
 * MsgConvertERC20 defines a Msg to convert a ERC20 token to a native Cosmos
 * coin.
 *
 * @generated from message evmos.erc20.v1.MsgConvertERC20
 */
export declare class MsgConvertERC20 extends Message<MsgConvertERC20> {
  /**
   * contract_address of an ERC20 token contract, that is registered in a token pair
   *
   * @generated from field: string contract_address = 1;
   */
  contractAddress: string;

  /**
   * amount of ERC20 tokens to convert
   *
   * @generated from field: string amount = 2;
   */
  amount: string;

  /**
   * receiver is the bech32 address to receive native Cosmos coins
   *
   * @generated from field: string receiver = 3;
   */
  receiver: string;

  /**
   * sender is the hex address from the owner of the given ERC20 tokens
   *
   * @generated from field: string sender = 4;
   */
  sender: string;

  constructor(data?: PartialMessage<MsgConvertERC20>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.MsgConvertERC20";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertERC20;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertERC20;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertERC20;

  static equals(a: MsgConvertERC20 | PlainMessage<MsgConvertERC20> | undefined, b: MsgConvertERC20 | PlainMessage<MsgConvertERC20> | undefined): boolean;
}

/**
 * MsgConvertERC20Response returns no fields
 *
 * @generated from message evmos.erc20.v1.MsgConvertERC20Response
 */
export declare class MsgConvertERC20Response extends Message<MsgConvertERC20Response> {
  constructor(data?: PartialMessage<MsgConvertERC20Response>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.MsgConvertERC20Response";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertERC20Response;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertERC20Response;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertERC20Response;

  static equals(a: MsgConvertERC20Response | PlainMessage<MsgConvertERC20Response> | undefined, b: MsgConvertERC20Response | PlainMessage<MsgConvertERC20Response> | undefined): boolean;
}

/**
 * MsgUpdateParams is the Msg/UpdateParams request type for Erc20 parameters.
 * Since: cosmos-sdk 0.47
 *
 * @generated from message evmos.erc20.v1.MsgUpdateParams
 */
export declare class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address of the governance account.
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * params defines the x/evm parameters to update.
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: evmos.erc20.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.MsgUpdateParams";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams;

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean;
}

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 * Since: cosmos-sdk 0.47
 *
 * @generated from message evmos.erc20.v1.MsgUpdateParamsResponse
 */
export declare class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.erc20.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse;

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean;
}

