// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/vesting/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/msg/v1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/bank/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file evmos/vesting/v1/query.proto (package evmos.vesting.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Coin } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/v1beta1/coin_pb.js";

/**
 * QueryBalancesRequest is the request type for the Query/Balances RPC method.
 *
 * @generated from message evmos.vesting.v1.QueryBalancesRequest
 */
export declare class QueryBalancesRequest extends Message<QueryBalancesRequest> {
  /**
   * address of the clawback vesting account
   *
   * @generated from field: string address = 1;
   */
  address: string;

  constructor(data?: PartialMessage<QueryBalancesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v1.QueryBalancesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBalancesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBalancesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBalancesRequest;

  static equals(a: QueryBalancesRequest | PlainMessage<QueryBalancesRequest> | undefined, b: QueryBalancesRequest | PlainMessage<QueryBalancesRequest> | undefined): boolean;
}

/**
 * QueryBalancesResponse is the response type for the Query/Balances RPC
 * method.
 *
 * @generated from message evmos.vesting.v1.QueryBalancesResponse
 */
export declare class QueryBalancesResponse extends Message<QueryBalancesResponse> {
  /**
   * locked defines the current amount of locked tokens
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin locked = 1;
   */
  locked: Coin[];

  /**
   * unvested defines the current amount of unvested tokens
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin unvested = 2;
   */
  unvested: Coin[];

  /**
   * vested defines the current amount of vested tokens
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin vested = 3;
   */
  vested: Coin[];

  constructor(data?: PartialMessage<QueryBalancesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v1.QueryBalancesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBalancesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBalancesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBalancesResponse;

  static equals(a: QueryBalancesResponse | PlainMessage<QueryBalancesResponse> | undefined, b: QueryBalancesResponse | PlainMessage<QueryBalancesResponse> | undefined): boolean;
}

