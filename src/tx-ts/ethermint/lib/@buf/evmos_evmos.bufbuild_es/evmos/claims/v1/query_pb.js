// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/vesting/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/msg/v1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/bank/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file evmos/claims/v1/query.proto (package evmos.claims.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Coin } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/v1beta1/coin_pb.js";
import { Params } from "./genesis_pb.js";
import { PageRequest, PageResponse } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/query/v1beta1/pagination_pb.js";
import { Claim, ClaimsRecordAddress } from "./claims_pb.js";

/**
 * QueryTotalUnclaimedRequest is the request type for the Query/TotalUnclaimed
 * RPC method.
 *
 * @generated from message evmos.claims.v1.QueryTotalUnclaimedRequest
 */
export const QueryTotalUnclaimedRequest = proto3.makeMessageType(
  "evmos.claims.v1.QueryTotalUnclaimedRequest",
  [],
);

/**
 * QueryTotalUnclaimedResponse is the response type for the Query/TotalUnclaimed
 * RPC method.
 *
 * @generated from message evmos.claims.v1.QueryTotalUnclaimedResponse
 */
export const QueryTotalUnclaimedResponse = proto3.makeMessageType(
  "evmos.claims.v1.QueryTotalUnclaimedResponse",
  () => [
    { no: 1, name: "coins", kind: "message", T: Coin, repeated: true },
  ],
);

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message evmos.claims.v1.QueryParamsRequest
 */
export const QueryParamsRequest = proto3.makeMessageType(
  "evmos.claims.v1.QueryParamsRequest",
  [],
);

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message evmos.claims.v1.QueryParamsResponse
 */
export const QueryParamsResponse = proto3.makeMessageType(
  "evmos.claims.v1.QueryParamsResponse",
  () => [
    { no: 1, name: "params", kind: "message", T: Params },
  ],
);

/**
 * QueryClaimsRecordsRequest is the request type for the Query/ClaimsRecords RPC
 * method.
 *
 * @generated from message evmos.claims.v1.QueryClaimsRecordsRequest
 */
export const QueryClaimsRecordsRequest = proto3.makeMessageType(
  "evmos.claims.v1.QueryClaimsRecordsRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryClaimsRecordsResponse is the response type for the Query/ClaimsRecords
 * RPC method.
 *
 * @generated from message evmos.claims.v1.QueryClaimsRecordsResponse
 */
export const QueryClaimsRecordsResponse = proto3.makeMessageType(
  "evmos.claims.v1.QueryClaimsRecordsResponse",
  () => [
    { no: 1, name: "claims", kind: "message", T: ClaimsRecordAddress, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryClaimsRecordRequest is the request type for the Query/ClaimsRecord RPC
 * method.
 *
 * @generated from message evmos.claims.v1.QueryClaimsRecordRequest
 */
export const QueryClaimsRecordRequest = proto3.makeMessageType(
  "evmos.claims.v1.QueryClaimsRecordRequest",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryClaimsRecordResponse is the response type for the Query/ClaimsRecord RPC
 * method.
 *
 * @generated from message evmos.claims.v1.QueryClaimsRecordResponse
 */
export const QueryClaimsRecordResponse = proto3.makeMessageType(
  "evmos.claims.v1.QueryClaimsRecordResponse",
  () => [
    { no: 1, name: "initial_claimable_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "claims", kind: "message", T: Claim, repeated: true },
  ],
);

