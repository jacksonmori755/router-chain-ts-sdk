// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/vesting/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/msg/v1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/bank/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file evmos/claims/v1/genesis.proto (package evmos.claims.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ClaimsRecordAddress } from "./claims_pb.js";

/**
 * GenesisState define the claims module's genesis state.
 *
 * @generated from message evmos.claims.v1.GenesisState
 */
export declare class GenesisState extends Message<GenesisState> {
  /**
   * params defines all the parameters of the module.
   *
   * @generated from field: evmos.claims.v1.Params params = 1;
   */
  params?: Params;

  /**
   * claims_records is a list of claim records with the corresponding airdrop recipient
   *
   * @generated from field: repeated evmos.claims.v1.ClaimsRecordAddress claims_records = 2;
   */
  claimsRecords: ClaimsRecordAddress[];

  constructor(data?: PartialMessage<GenesisState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.claims.v1.GenesisState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisState;

  static equals(a: GenesisState | PlainMessage<GenesisState> | undefined, b: GenesisState | PlainMessage<GenesisState> | undefined): boolean;
}

/**
 * Params defines the claims module's parameters.
 *
 * @generated from message evmos.claims.v1.Params
 */
export declare class Params extends Message<Params> {
  /**
   * enable_claims is the parameter to enable the claiming process
   *
   * @generated from field: bool enable_claims = 1;
   */
  enableClaims: boolean;

  /**
   * airdrop_start_time defines the timestamp of the airdrop start
   *
   * @generated from field: google.protobuf.Timestamp airdrop_start_time = 2;
   */
  airdropStartTime?: Timestamp;

  /**
   * duration_until_decay of claimable tokens begin
   *
   * @generated from field: google.protobuf.Duration duration_until_decay = 3;
   */
  durationUntilDecay?: Duration;

  /**
   * duration_of_decay for token claim decay period
   *
   * @generated from field: google.protobuf.Duration duration_of_decay = 4;
   */
  durationOfDecay?: Duration;

  /**
   * claims_denom is the denomination of the claimable coin
   *
   * @generated from field: string claims_denom = 5;
   */
  claimsDenom: string;

  /**
   * authorized_channels is the list of authorized channel identifiers that can perform address
   * attestations via IBC.
   *
   * @generated from field: repeated string authorized_channels = 6;
   */
  authorizedChannels: string[];

  /**
   * evm_channels is the list of channel identifiers from EVM compatible chains
   *
   * @generated from field: repeated string evm_channels = 7;
   */
  evmChannels: string[];

  constructor(data?: PartialMessage<Params>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.claims.v1.Params";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Params;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Params;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Params;

  static equals(a: Params | PlainMessage<Params> | undefined, b: Params | PlainMessage<Params> | undefined): boolean;
}

