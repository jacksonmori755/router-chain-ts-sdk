// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/params/v1beta1/query.proto (package cosmos.params.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { ParamChange } from "./params_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.params.v1beta1.QueryParamsRequest
 */
export const QueryParamsRequest = proto3.makeMessageType(
  "cosmos.params.v1beta1.QueryParamsRequest",
  () => [
    { no: 1, name: "subspace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.params.v1beta1.QueryParamsResponse
 */
export const QueryParamsResponse = proto3.makeMessageType(
  "cosmos.params.v1beta1.QueryParamsResponse",
  () => [
    { no: 1, name: "param", kind: "message", T: ParamChange },
  ],
);

/**
 * QuerySubspacesRequest defines a request type for querying for all registered
 * subspaces and all keys for a subspace.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.params.v1beta1.QuerySubspacesRequest
 */
export const QuerySubspacesRequest = proto3.makeMessageType(
  "cosmos.params.v1beta1.QuerySubspacesRequest",
  [],
);

/**
 * QuerySubspacesResponse defines the response types for querying for all
 * registered subspaces and all keys for a subspace.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.params.v1beta1.QuerySubspacesResponse
 */
export const QuerySubspacesResponse = proto3.makeMessageType(
  "cosmos.params.v1beta1.QuerySubspacesResponse",
  () => [
    { no: 1, name: "subspaces", kind: "message", T: Subspace, repeated: true },
  ],
);

/**
 * Subspace defines a parameter subspace name and all the keys that exist for
 * the subspace.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.params.v1beta1.Subspace
 */
export const Subspace = proto3.makeMessageType(
  "cosmos.params.v1beta1.Subspace",
  () => [
    { no: 1, name: "subspace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

