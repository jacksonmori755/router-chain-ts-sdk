// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/gov/v1beta1/query.proto (package cosmos.gov.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Deposit, DepositParams, Proposal, ProposalStatus, TallyParams, TallyResult, Vote, VotingParams } from "./gov_pb.js";
import { PageRequest, PageResponse } from "../../base/query/v1beta1/pagination_pb.js";

/**
 * QueryProposalRequest is the request type for the Query/Proposal RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryProposalRequest
 */
export const QueryProposalRequest = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryProposalRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * QueryProposalResponse is the response type for the Query/Proposal RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryProposalResponse
 */
export const QueryProposalResponse = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryProposalResponse",
  () => [
    { no: 1, name: "proposal", kind: "message", T: Proposal },
  ],
);

/**
 * QueryProposalsRequest is the request type for the Query/Proposals RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryProposalsRequest
 */
export const QueryProposalsRequest = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryProposalsRequest",
  () => [
    { no: 1, name: "proposal_status", kind: "enum", T: proto3.getEnumType(ProposalStatus) },
    { no: 2, name: "voter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "depositor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryProposalsResponse is the response type for the Query/Proposals RPC
 * method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryProposalsResponse
 */
export const QueryProposalsResponse = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryProposalsResponse",
  () => [
    { no: 1, name: "proposals", kind: "message", T: Proposal, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryVoteRequest is the request type for the Query/Vote RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryVoteRequest
 */
export const QueryVoteRequest = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryVoteRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "voter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryVoteResponse is the response type for the Query/Vote RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryVoteResponse
 */
export const QueryVoteResponse = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryVoteResponse",
  () => [
    { no: 1, name: "vote", kind: "message", T: Vote },
  ],
);

/**
 * QueryVotesRequest is the request type for the Query/Votes RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryVotesRequest
 */
export const QueryVotesRequest = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryVotesRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryVotesResponse is the response type for the Query/Votes RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryVotesResponse
 */
export const QueryVotesResponse = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryVotesResponse",
  () => [
    { no: 1, name: "votes", kind: "message", T: Vote, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryParamsRequest
 */
export const QueryParamsRequest = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryParamsRequest",
  () => [
    { no: 1, name: "params_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryParamsResponse
 */
export const QueryParamsResponse = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryParamsResponse",
  () => [
    { no: 1, name: "voting_params", kind: "message", T: VotingParams },
    { no: 2, name: "deposit_params", kind: "message", T: DepositParams },
    { no: 3, name: "tally_params", kind: "message", T: TallyParams },
  ],
);

/**
 * QueryDepositRequest is the request type for the Query/Deposit RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryDepositRequest
 */
export const QueryDepositRequest = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryDepositRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "depositor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryDepositResponse is the response type for the Query/Deposit RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryDepositResponse
 */
export const QueryDepositResponse = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryDepositResponse",
  () => [
    { no: 1, name: "deposit", kind: "message", T: Deposit },
  ],
);

/**
 * QueryDepositsRequest is the request type for the Query/Deposits RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryDepositsRequest
 */
export const QueryDepositsRequest = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryDepositsRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryDepositsResponse is the response type for the Query/Deposits RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryDepositsResponse
 */
export const QueryDepositsResponse = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryDepositsResponse",
  () => [
    { no: 1, name: "deposits", kind: "message", T: Deposit, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryTallyResultRequest is the request type for the Query/Tally RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryTallyResultRequest
 */
export const QueryTallyResultRequest = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryTallyResultRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * QueryTallyResultResponse is the response type for the Query/Tally RPC method.
 *
 * @generated from message cosmos.gov.v1beta1.QueryTallyResultResponse
 */
export const QueryTallyResultResponse = proto3.makeMessageType(
  "cosmos.gov.v1beta1.QueryTallyResultResponse",
  () => [
    { no: 1, name: "tally", kind: "message", T: TallyResult },
  ],
);

