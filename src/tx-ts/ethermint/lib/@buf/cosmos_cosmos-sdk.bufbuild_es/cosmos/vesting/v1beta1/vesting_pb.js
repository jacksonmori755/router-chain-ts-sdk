// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/vesting/v1beta1/vesting.proto (package cosmos.vesting.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { BaseAccount } from "../../auth/v1beta1/auth_pb.js";
import { Coin } from "../../base/v1beta1/coin_pb.js";

/**
 * BaseVestingAccount implements the VestingAccount interface. It contains all
 * the necessary fields needed for any vesting account implementation.
 *
 * @generated from message cosmos.vesting.v1beta1.BaseVestingAccount
 */
export const BaseVestingAccount = proto3.makeMessageType(
  "cosmos.vesting.v1beta1.BaseVestingAccount",
  () => [
    { no: 1, name: "base_account", kind: "message", T: BaseAccount },
    { no: 2, name: "original_vesting", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "delegated_free", kind: "message", T: Coin, repeated: true },
    { no: 4, name: "delegated_vesting", kind: "message", T: Coin, repeated: true },
    { no: 5, name: "end_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * ContinuousVestingAccount implements the VestingAccount interface. It
 * continuously vests by unlocking coins linearly with respect to time.
 *
 * @generated from message cosmos.vesting.v1beta1.ContinuousVestingAccount
 */
export const ContinuousVestingAccount = proto3.makeMessageType(
  "cosmos.vesting.v1beta1.ContinuousVestingAccount",
  () => [
    { no: 1, name: "base_vesting_account", kind: "message", T: BaseVestingAccount },
    { no: 2, name: "start_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * DelayedVestingAccount implements the VestingAccount interface. It vests all
 * coins after a specific time, but non prior. In other words, it keeps them
 * locked until a specified time.
 *
 * @generated from message cosmos.vesting.v1beta1.DelayedVestingAccount
 */
export const DelayedVestingAccount = proto3.makeMessageType(
  "cosmos.vesting.v1beta1.DelayedVestingAccount",
  () => [
    { no: 1, name: "base_vesting_account", kind: "message", T: BaseVestingAccount },
  ],
);

/**
 * Period defines a length of time and amount of coins that will vest.
 *
 * @generated from message cosmos.vesting.v1beta1.Period
 */
export const Period = proto3.makeMessageType(
  "cosmos.vesting.v1beta1.Period",
  () => [
    { no: 1, name: "length", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "amount", kind: "message", T: Coin, repeated: true },
  ],
);

/**
 * PeriodicVestingAccount implements the VestingAccount interface. It
 * periodically vests by unlocking coins during each specified period.
 *
 * @generated from message cosmos.vesting.v1beta1.PeriodicVestingAccount
 */
export const PeriodicVestingAccount = proto3.makeMessageType(
  "cosmos.vesting.v1beta1.PeriodicVestingAccount",
  () => [
    { no: 1, name: "base_vesting_account", kind: "message", T: BaseVestingAccount },
    { no: 2, name: "start_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vesting_periods", kind: "message", T: Period, repeated: true },
  ],
);

/**
 * PermanentLockedAccount implements the VestingAccount interface. It does
 * not ever release coins, locking them indefinitely. Coins in this account can
 * still be used for delegating and for governance votes even while locked.
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from message cosmos.vesting.v1beta1.PermanentLockedAccount
 */
export const PermanentLockedAccount = proto3.makeMessageType(
  "cosmos.vesting.v1beta1.PermanentLockedAccount",
  () => [
    { no: 1, name: "base_vesting_account", kind: "message", T: BaseVestingAccount },
  ],
);

