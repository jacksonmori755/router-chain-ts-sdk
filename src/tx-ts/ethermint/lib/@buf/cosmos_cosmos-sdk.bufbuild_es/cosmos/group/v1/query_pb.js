// Since: cosmos-sdk 0.46

// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/group/v1/query.proto (package cosmos.group.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { GroupInfo, GroupMember, GroupPolicyInfo, Proposal, TallyResult, Vote } from "./types_pb.js";
import { PageRequest, PageResponse } from "../../base/query/v1beta1/pagination_pb.js";

/**
 * QueryGroupInfoRequest is the Query/GroupInfo request type.
 *
 * @generated from message cosmos.group.v1.QueryGroupInfoRequest
 */
export const QueryGroupInfoRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupInfoRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * QueryGroupInfoResponse is the Query/GroupInfo response type.
 *
 * @generated from message cosmos.group.v1.QueryGroupInfoResponse
 */
export const QueryGroupInfoResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupInfoResponse",
  () => [
    { no: 1, name: "info", kind: "message", T: GroupInfo },
  ],
);

/**
 * QueryGroupPolicyInfoRequest is the Query/GroupPolicyInfo request type.
 *
 * @generated from message cosmos.group.v1.QueryGroupPolicyInfoRequest
 */
export const QueryGroupPolicyInfoRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupPolicyInfoRequest",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response type.
 *
 * @generated from message cosmos.group.v1.QueryGroupPolicyInfoResponse
 */
export const QueryGroupPolicyInfoResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupPolicyInfoResponse",
  () => [
    { no: 1, name: "info", kind: "message", T: GroupPolicyInfo },
  ],
);

/**
 * QueryGroupMembersRequest is the Query/GroupMembers request type.
 *
 * @generated from message cosmos.group.v1.QueryGroupMembersRequest
 */
export const QueryGroupMembersRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupMembersRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryGroupMembersResponse is the Query/GroupMembersResponse response type.
 *
 * @generated from message cosmos.group.v1.QueryGroupMembersResponse
 */
export const QueryGroupMembersResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupMembersResponse",
  () => [
    { no: 1, name: "members", kind: "message", T: GroupMember, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryGroupsByAdminRequest is the Query/GroupsByAdmin request type.
 *
 * @generated from message cosmos.group.v1.QueryGroupsByAdminRequest
 */
export const QueryGroupsByAdminRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupsByAdminRequest",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response type.
 *
 * @generated from message cosmos.group.v1.QueryGroupsByAdminResponse
 */
export const QueryGroupsByAdminResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupsByAdminResponse",
  () => [
    { no: 1, name: "groups", kind: "message", T: GroupInfo, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryGroupPoliciesByGroupRequest is the Query/GroupPoliciesByGroup request type.
 *
 * @generated from message cosmos.group.v1.QueryGroupPoliciesByGroupRequest
 */
export const QueryGroupPoliciesByGroupRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupPoliciesByGroupRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup response type.
 *
 * @generated from message cosmos.group.v1.QueryGroupPoliciesByGroupResponse
 */
export const QueryGroupPoliciesByGroupResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupPoliciesByGroupResponse",
  () => [
    { no: 1, name: "group_policies", kind: "message", T: GroupPolicyInfo, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryGroupPoliciesByAdminRequest is the Query/GroupPoliciesByAdmin request type.
 *
 * @generated from message cosmos.group.v1.QueryGroupPoliciesByAdminRequest
 */
export const QueryGroupPoliciesByAdminRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupPoliciesByAdminRequest",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin response type.
 *
 * @generated from message cosmos.group.v1.QueryGroupPoliciesByAdminResponse
 */
export const QueryGroupPoliciesByAdminResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupPoliciesByAdminResponse",
  () => [
    { no: 1, name: "group_policies", kind: "message", T: GroupPolicyInfo, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryProposalRequest is the Query/Proposal request type.
 *
 * @generated from message cosmos.group.v1.QueryProposalRequest
 */
export const QueryProposalRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryProposalRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * QueryProposalResponse is the Query/Proposal response type.
 *
 * @generated from message cosmos.group.v1.QueryProposalResponse
 */
export const QueryProposalResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryProposalResponse",
  () => [
    { no: 1, name: "proposal", kind: "message", T: Proposal },
  ],
);

/**
 * QueryProposalsByGroupPolicyRequest is the Query/ProposalByGroupPolicy request type.
 *
 * @generated from message cosmos.group.v1.QueryProposalsByGroupPolicyRequest
 */
export const QueryProposalsByGroupPolicyRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryProposalsByGroupPolicyRequest",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy response type.
 *
 * @generated from message cosmos.group.v1.QueryProposalsByGroupPolicyResponse
 */
export const QueryProposalsByGroupPolicyResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryProposalsByGroupPolicyResponse",
  () => [
    { no: 1, name: "proposals", kind: "message", T: Proposal, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryVoteByProposalVoterRequest is the Query/VoteByProposalVoter request type.
 *
 * @generated from message cosmos.group.v1.QueryVoteByProposalVoterRequest
 */
export const QueryVoteByProposalVoterRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryVoteByProposalVoterRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "voter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter response type.
 *
 * @generated from message cosmos.group.v1.QueryVoteByProposalVoterResponse
 */
export const QueryVoteByProposalVoterResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryVoteByProposalVoterResponse",
  () => [
    { no: 1, name: "vote", kind: "message", T: Vote },
  ],
);

/**
 * QueryVotesByProposalRequest is the Query/VotesByProposal request type.
 *
 * @generated from message cosmos.group.v1.QueryVotesByProposalRequest
 */
export const QueryVotesByProposalRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryVotesByProposalRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryVotesByProposalResponse is the Query/VotesByProposal response type.
 *
 * @generated from message cosmos.group.v1.QueryVotesByProposalResponse
 */
export const QueryVotesByProposalResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryVotesByProposalResponse",
  () => [
    { no: 1, name: "votes", kind: "message", T: Vote, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryVotesByVoterRequest is the Query/VotesByVoter request type.
 *
 * @generated from message cosmos.group.v1.QueryVotesByVoterRequest
 */
export const QueryVotesByVoterRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryVotesByVoterRequest",
  () => [
    { no: 1, name: "voter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryVotesByVoterResponse is the Query/VotesByVoter response type.
 *
 * @generated from message cosmos.group.v1.QueryVotesByVoterResponse
 */
export const QueryVotesByVoterResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryVotesByVoterResponse",
  () => [
    { no: 1, name: "votes", kind: "message", T: Vote, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryGroupsByMemberRequest is the Query/GroupsByMember request type.
 *
 * @generated from message cosmos.group.v1.QueryGroupsByMemberRequest
 */
export const QueryGroupsByMemberRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupsByMemberRequest",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryGroupsByMemberResponse is the Query/GroupsByMember response type.
 *
 * @generated from message cosmos.group.v1.QueryGroupsByMemberResponse
 */
export const QueryGroupsByMemberResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryGroupsByMemberResponse",
  () => [
    { no: 1, name: "groups", kind: "message", T: GroupInfo, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryTallyResultRequest is the Query/TallyResult request type.
 *
 * @generated from message cosmos.group.v1.QueryTallyResultRequest
 */
export const QueryTallyResultRequest = proto3.makeMessageType(
  "cosmos.group.v1.QueryTallyResultRequest",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * QueryTallyResultResponse is the Query/TallyResult response type.
 *
 * @generated from message cosmos.group.v1.QueryTallyResultResponse
 */
export const QueryTallyResultResponse = proto3.makeMessageType(
  "cosmos.group.v1.QueryTallyResultResponse",
  () => [
    { no: 1, name: "tally", kind: "message", T: TallyResult },
  ],
);

