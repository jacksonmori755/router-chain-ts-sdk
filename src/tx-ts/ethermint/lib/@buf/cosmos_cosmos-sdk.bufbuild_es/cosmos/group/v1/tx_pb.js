// Since: cosmos-sdk 0.46

// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/group/v1/tx.proto (package cosmos.group.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Any, proto3 } from "@bufbuild/protobuf";
import { MemberRequest, ProposalExecutorResult, VoteOption } from "./types_pb.js";

/**
 * Exec defines modes of execution of a proposal on creation or on new vote.
 *
 * @generated from enum cosmos.group.v1.Exec
 */
export const Exec = proto3.makeEnum(
  "cosmos.group.v1.Exec",
  [
    {no: 0, name: "EXEC_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "EXEC_TRY", localName: "TRY"},
  ],
);

/**
 * MsgCreateGroup is the Msg/CreateGroup request type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroup
 */
export const MsgCreateGroup = proto3.makeMessageType(
  "cosmos.group.v1.MsgCreateGroup",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "members", kind: "message", T: MemberRequest, repeated: true },
    { no: 3, name: "metadata", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgCreateGroupResponse is the Msg/CreateGroup response type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupResponse
 */
export const MsgCreateGroupResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgCreateGroupResponse",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupMembers
 */
export const MsgUpdateGroupMembers = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupMembers",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "member_updates", kind: "message", T: MemberRequest, repeated: true },
  ],
);

/**
 * MsgUpdateGroupMembersResponse is the Msg/UpdateGroupMembers response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupMembersResponse
 */
export const MsgUpdateGroupMembersResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupMembersResponse",
  [],
);

/**
 * MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupAdmin
 */
export const MsgUpdateGroupAdmin = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupAdmin",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "new_admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgUpdateGroupAdminResponse is the Msg/UpdateGroupAdmin response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupAdminResponse
 */
export const MsgUpdateGroupAdminResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupAdminResponse",
  [],
);

/**
 * MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupMetadata
 */
export const MsgUpdateGroupMetadata = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupMetadata",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "metadata", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgUpdateGroupMetadataResponse is the Msg/UpdateGroupMetadata response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupMetadataResponse
 */
export const MsgUpdateGroupMetadataResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupMetadataResponse",
  [],
);

/**
 * MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupPolicy
 */
export const MsgCreateGroupPolicy = proto3.makeMessageType(
  "cosmos.group.v1.MsgCreateGroupPolicy",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "metadata", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "decision_policy", kind: "message", T: Any },
  ],
);

/**
 * MsgCreateGroupPolicyResponse is the Msg/CreateGroupPolicy response type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupPolicyResponse
 */
export const MsgCreateGroupPolicyResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgCreateGroupPolicyResponse",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyAdmin
 */
export const MsgUpdateGroupPolicyAdmin = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_policy_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "new_admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgUpdateGroupPolicyAdminResponse is the Msg/UpdateGroupPolicyAdmin response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse
 */
export const MsgUpdateGroupPolicyAdminResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse",
  [],
);

/**
 * MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupWithPolicy
 */
export const MsgCreateGroupWithPolicy = proto3.makeMessageType(
  "cosmos.group.v1.MsgCreateGroupWithPolicy",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "members", kind: "message", T: MemberRequest, repeated: true },
    { no: 3, name: "group_metadata", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "group_policy_metadata", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "group_policy_as_admin", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "decision_policy", kind: "message", T: Any },
  ],
);

/**
 * MsgCreateGroupWithPolicyResponse is the Msg/CreateGroupWithPolicy response type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupWithPolicyResponse
 */
export const MsgCreateGroupWithPolicyResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgCreateGroupWithPolicyResponse",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "group_policy_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy
 */
export const MsgUpdateGroupPolicyDecisionPolicy = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_policy_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "decision_policy", kind: "message", T: Any },
  ],
);

/**
 * MsgUpdateGroupPolicyDecisionPolicyResponse is the Msg/UpdateGroupPolicyDecisionPolicy response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse
 */
export const MsgUpdateGroupPolicyDecisionPolicyResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse",
  [],
);

/**
 * MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyMetadata
 */
export const MsgUpdateGroupPolicyMetadata = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupPolicyMetadata",
  () => [
    { no: 1, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_policy_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgUpdateGroupPolicyMetadataResponse is the Msg/UpdateGroupPolicyMetadata response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse
 */
export const MsgUpdateGroupPolicyMetadataResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse",
  [],
);

/**
 * MsgSubmitProposal is the Msg/SubmitProposal request type.
 *
 * @generated from message cosmos.group.v1.MsgSubmitProposal
 */
export const MsgSubmitProposal = proto3.makeMessageType(
  "cosmos.group.v1.MsgSubmitProposal",
  () => [
    { no: 1, name: "group_policy_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "proposers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "metadata", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "messages", kind: "message", T: Any, repeated: true },
    { no: 5, name: "exec", kind: "enum", T: proto3.getEnumType(Exec) },
  ],
);

/**
 * MsgSubmitProposalResponse is the Msg/SubmitProposal response type.
 *
 * @generated from message cosmos.group.v1.MsgSubmitProposalResponse
 */
export const MsgSubmitProposalResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgSubmitProposalResponse",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * MsgWithdrawProposal is the Msg/WithdrawProposal request type.
 *
 * @generated from message cosmos.group.v1.MsgWithdrawProposal
 */
export const MsgWithdrawProposal = proto3.makeMessageType(
  "cosmos.group.v1.MsgWithdrawProposal",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgWithdrawProposalResponse is the Msg/WithdrawProposal response type.
 *
 * @generated from message cosmos.group.v1.MsgWithdrawProposalResponse
 */
export const MsgWithdrawProposalResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgWithdrawProposalResponse",
  [],
);

/**
 * MsgVote is the Msg/Vote request type.
 *
 * @generated from message cosmos.group.v1.MsgVote
 */
export const MsgVote = proto3.makeMessageType(
  "cosmos.group.v1.MsgVote",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "voter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "option", kind: "enum", T: proto3.getEnumType(VoteOption) },
    { no: 4, name: "metadata", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "exec", kind: "enum", T: proto3.getEnumType(Exec) },
  ],
);

/**
 * MsgVoteResponse is the Msg/Vote response type.
 *
 * @generated from message cosmos.group.v1.MsgVoteResponse
 */
export const MsgVoteResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgVoteResponse",
  [],
);

/**
 * MsgExec is the Msg/Exec request type.
 *
 * @generated from message cosmos.group.v1.MsgExec
 */
export const MsgExec = proto3.makeMessageType(
  "cosmos.group.v1.MsgExec",
  () => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "executor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgExecResponse is the Msg/Exec request type.
 *
 * @generated from message cosmos.group.v1.MsgExecResponse
 */
export const MsgExecResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgExecResponse",
  () => [
    { no: 2, name: "result", kind: "enum", T: proto3.getEnumType(ProposalExecutorResult) },
  ],
);

/**
 * MsgLeaveGroup is the Msg/LeaveGroup request type.
 *
 * @generated from message cosmos.group.v1.MsgLeaveGroup
 */
export const MsgLeaveGroup = proto3.makeMessageType(
  "cosmos.group.v1.MsgLeaveGroup",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * MsgLeaveGroupResponse is the Msg/LeaveGroup response type.
 *
 * @generated from message cosmos.group.v1.MsgLeaveGroupResponse
 */
export const MsgLeaveGroupResponse = proto3.makeMessageType(
  "cosmos.group.v1.MsgLeaveGroupResponse",
  [],
);

