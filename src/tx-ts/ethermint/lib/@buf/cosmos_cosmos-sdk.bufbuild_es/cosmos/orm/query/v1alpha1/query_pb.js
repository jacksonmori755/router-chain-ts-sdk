// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/orm/query/v1alpha1/query.proto (package cosmos.orm.query.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Any, Duration, proto3, Timestamp } from "@bufbuild/protobuf";
import { PageRequest, PageResponse } from "../../../base/query/v1beta1/pagination_pb.js";

/**
 * GetRequest is the Query/Get request type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.GetRequest
 */
export const GetRequest = proto3.makeMessageType(
  "cosmos.orm.query.v1alpha1.GetRequest",
  () => [
    { no: 1, name: "message_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "values", kind: "message", T: IndexValue, repeated: true },
  ],
);

/**
 * GetResponse is the Query/Get response type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.GetResponse
 */
export const GetResponse = proto3.makeMessageType(
  "cosmos.orm.query.v1alpha1.GetResponse",
  () => [
    { no: 1, name: "result", kind: "message", T: Any },
  ],
);

/**
 * ListRequest is the Query/List request type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListRequest
 */
export const ListRequest = proto3.makeMessageType(
  "cosmos.orm.query.v1alpha1.ListRequest",
  () => [
    { no: 1, name: "message_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "prefix", kind: "message", T: ListRequest_Prefix, oneof: "query" },
    { no: 4, name: "range", kind: "message", T: ListRequest_Range, oneof: "query" },
    { no: 5, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * Prefix specifies the arguments to a prefix query.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListRequest.Prefix
 */
export const ListRequest_Prefix = proto3.makeMessageType(
  "cosmos.orm.query.v1alpha1.ListRequest.Prefix",
  () => [
    { no: 1, name: "values", kind: "message", T: IndexValue, repeated: true },
  ],
  {localName: "ListRequest_Prefix"},
);

/**
 * Range specifies the arguments to a range query.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListRequest.Range
 */
export const ListRequest_Range = proto3.makeMessageType(
  "cosmos.orm.query.v1alpha1.ListRequest.Range",
  () => [
    { no: 1, name: "start", kind: "message", T: IndexValue, repeated: true },
    { no: 2, name: "end", kind: "message", T: IndexValue, repeated: true },
  ],
  {localName: "ListRequest_Range"},
);

/**
 * ListResponse is the Query/List response type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListResponse
 */
export const ListResponse = proto3.makeMessageType(
  "cosmos.orm.query.v1alpha1.ListResponse",
  () => [
    { no: 1, name: "results", kind: "message", T: Any, repeated: true },
    { no: 5, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * IndexValue represents the value of a field in an ORM index expression.
 *
 * @generated from message cosmos.orm.query.v1alpha1.IndexValue
 */
export const IndexValue = proto3.makeMessageType(
  "cosmos.orm.query.v1alpha1.IndexValue",
  () => [
    { no: 1, name: "uint", kind: "scalar", T: 4 /* ScalarType.UINT64 */, oneof: "value" },
    { no: 2, name: "int", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "value" },
    { no: 3, name: "str", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "value" },
    { no: 4, name: "bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "value" },
    { no: 5, name: "enum", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "value" },
    { no: 6, name: "bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "value" },
    { no: 7, name: "timestamp", kind: "message", T: Timestamp, oneof: "value" },
    { no: 8, name: "duration", kind: "message", T: Duration, oneof: "value" },
  ],
);

