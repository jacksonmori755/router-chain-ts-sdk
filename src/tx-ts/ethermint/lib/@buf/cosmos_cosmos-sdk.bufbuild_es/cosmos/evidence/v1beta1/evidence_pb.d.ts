// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/evidence/v1beta1/evidence.proto (package cosmos.evidence.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Equivocation implements the Evidence interface and defines evidence of double
 * signing misbehavior.
 *
 * @generated from message cosmos.evidence.v1beta1.Equivocation
 */
export declare class Equivocation extends Message<Equivocation> {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp time = 2;
   */
  time?: Timestamp;

  /**
   * @generated from field: int64 power = 3;
   */
  power: bigint;

  /**
   * @generated from field: string consensus_address = 4;
   */
  consensusAddress: string;

  constructor(data?: PartialMessage<Equivocation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cosmos.evidence.v1beta1.Equivocation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Equivocation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Equivocation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Equivocation;

  static equals(a: Equivocation | PlainMessage<Equivocation> | undefined, b: Equivocation | PlainMessage<Equivocation> | undefined): boolean;
}

