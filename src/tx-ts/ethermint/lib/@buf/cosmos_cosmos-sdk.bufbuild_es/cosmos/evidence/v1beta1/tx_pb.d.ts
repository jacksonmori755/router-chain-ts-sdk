// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/evidence/v1beta1/tx.proto (package cosmos.evidence.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { Any, BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * MsgSubmitEvidence represents a message that supports submitting arbitrary
 * Evidence of misbehavior such as equivocation or counterfactual signing.
 *
 * @generated from message cosmos.evidence.v1beta1.MsgSubmitEvidence
 */
export declare class MsgSubmitEvidence extends Message<MsgSubmitEvidence> {
  /**
   * @generated from field: string submitter = 1;
   */
  submitter: string;

  /**
   * @generated from field: google.protobuf.Any evidence = 2;
   */
  evidence?: Any;

  constructor(data?: PartialMessage<MsgSubmitEvidence>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cosmos.evidence.v1beta1.MsgSubmitEvidence";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSubmitEvidence;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSubmitEvidence;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSubmitEvidence;

  static equals(a: MsgSubmitEvidence | PlainMessage<MsgSubmitEvidence> | undefined, b: MsgSubmitEvidence | PlainMessage<MsgSubmitEvidence> | undefined): boolean;
}

/**
 * MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response type.
 *
 * @generated from message cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse
 */
export declare class MsgSubmitEvidenceResponse extends Message<MsgSubmitEvidenceResponse> {
  /**
   * hash defines the hash of the evidence.
   *
   * @generated from field: bytes hash = 4;
   */
  hash: Uint8Array;

  constructor(data?: PartialMessage<MsgSubmitEvidenceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSubmitEvidenceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSubmitEvidenceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSubmitEvidenceResponse;

  static equals(a: MsgSubmitEvidenceResponse | PlainMessage<MsgSubmitEvidenceResponse> | undefined, b: MsgSubmitEvidenceResponse | PlainMessage<MsgSubmitEvidenceResponse> | undefined): boolean;
}

