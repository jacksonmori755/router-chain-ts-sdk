// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/base/store/v1beta1/commit_info.proto (package cosmos.base.store.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * CommitInfo defines commit information used by the multi-store when committing
 * a version/height.
 *
 * @generated from message cosmos.base.store.v1beta1.CommitInfo
 */
export const CommitInfo = proto3.makeMessageType(
  "cosmos.base.store.v1beta1.CommitInfo",
  () => [
    { no: 1, name: "version", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "store_infos", kind: "message", T: StoreInfo, repeated: true },
  ],
);

/**
 * StoreInfo defines store-specific commit information. It contains a reference
 * between a store name and the commit ID.
 *
 * @generated from message cosmos.base.store.v1beta1.StoreInfo
 */
export const StoreInfo = proto3.makeMessageType(
  "cosmos.base.store.v1beta1.StoreInfo",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "commit_id", kind: "message", T: CommitID },
  ],
);

/**
 * CommitID defines the commitment information when a specific store is
 * committed.
 *
 * @generated from message cosmos.base.store.v1beta1.CommitID
 */
export const CommitID = proto3.makeMessageType(
  "cosmos.base.store.v1beta1.CommitID",
  () => [
    { no: 1, name: "version", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

