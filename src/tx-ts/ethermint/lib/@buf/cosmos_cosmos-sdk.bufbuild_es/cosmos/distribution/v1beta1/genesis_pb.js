// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/distribution/v1beta1/genesis.proto (package cosmos.distribution.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { DecCoin } from "../../base/v1beta1/coin_pb.js";
import { DelegatorStartingInfo, FeePool, Params, ValidatorAccumulatedCommission, ValidatorCurrentRewards, ValidatorHistoricalRewards, ValidatorSlashEvent } from "./distribution_pb.js";

/**
 * DelegatorWithdrawInfo is the address for where distributions rewards are
 * withdrawn to by default this struct is only used at genesis to feed in
 * default withdraw addresses.
 *
 * @generated from message cosmos.distribution.v1beta1.DelegatorWithdrawInfo
 */
export const DelegatorWithdrawInfo = proto3.makeMessageType(
  "cosmos.distribution.v1beta1.DelegatorWithdrawInfo",
  () => [
    { no: 1, name: "delegator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "withdraw_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ValidatorOutstandingRewardsRecord is used for import/export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord
 */
export const ValidatorOutstandingRewardsRecord = proto3.makeMessageType(
  "cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord",
  () => [
    { no: 1, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "outstanding_rewards", kind: "message", T: DecCoin, repeated: true },
  ],
);

/**
 * ValidatorAccumulatedCommissionRecord is used for import / export via genesis
 * json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord
 */
export const ValidatorAccumulatedCommissionRecord = proto3.makeMessageType(
  "cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord",
  () => [
    { no: 1, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "accumulated", kind: "message", T: ValidatorAccumulatedCommission },
  ],
);

/**
 * ValidatorHistoricalRewardsRecord is used for import / export via genesis
 * json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord
 */
export const ValidatorHistoricalRewardsRecord = proto3.makeMessageType(
  "cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord",
  () => [
    { no: 1, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "period", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "rewards", kind: "message", T: ValidatorHistoricalRewards },
  ],
);

/**
 * ValidatorCurrentRewardsRecord is used for import / export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord
 */
export const ValidatorCurrentRewardsRecord = proto3.makeMessageType(
  "cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord",
  () => [
    { no: 1, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "rewards", kind: "message", T: ValidatorCurrentRewards },
  ],
);

/**
 * DelegatorStartingInfoRecord used for import / export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.DelegatorStartingInfoRecord
 */
export const DelegatorStartingInfoRecord = proto3.makeMessageType(
  "cosmos.distribution.v1beta1.DelegatorStartingInfoRecord",
  () => [
    { no: 1, name: "delegator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "starting_info", kind: "message", T: DelegatorStartingInfo },
  ],
);

/**
 * ValidatorSlashEventRecord is used for import / export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorSlashEventRecord
 */
export const ValidatorSlashEventRecord = proto3.makeMessageType(
  "cosmos.distribution.v1beta1.ValidatorSlashEventRecord",
  () => [
    { no: 1, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "period", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "validator_slash_event", kind: "message", T: ValidatorSlashEvent },
  ],
);

/**
 * GenesisState defines the distribution module's genesis state.
 *
 * @generated from message cosmos.distribution.v1beta1.GenesisState
 */
export const GenesisState = proto3.makeMessageType(
  "cosmos.distribution.v1beta1.GenesisState",
  () => [
    { no: 1, name: "params", kind: "message", T: Params },
    { no: 2, name: "fee_pool", kind: "message", T: FeePool },
    { no: 3, name: "delegator_withdraw_infos", kind: "message", T: DelegatorWithdrawInfo, repeated: true },
    { no: 4, name: "previous_proposer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "outstanding_rewards", kind: "message", T: ValidatorOutstandingRewardsRecord, repeated: true },
    { no: 6, name: "validator_accumulated_commissions", kind: "message", T: ValidatorAccumulatedCommissionRecord, repeated: true },
    { no: 7, name: "validator_historical_rewards", kind: "message", T: ValidatorHistoricalRewardsRecord, repeated: true },
    { no: 8, name: "validator_current_rewards", kind: "message", T: ValidatorCurrentRewardsRecord, repeated: true },
    { no: 9, name: "delegator_starting_infos", kind: "message", T: DelegatorStartingInfoRecord, repeated: true },
    { no: 10, name: "validator_slash_events", kind: "message", T: ValidatorSlashEventRecord, repeated: true },
  ],
);

