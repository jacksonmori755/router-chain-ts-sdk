// Since: cosmos-sdk 0.43

// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/feegrant/v1beta1/feegrant.proto (package cosmos.feegrant.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Any, Duration, proto3, Timestamp } from "@bufbuild/protobuf";
import { Coin } from "../../base/v1beta1/coin_pb.js";

/**
 * BasicAllowance implements Allowance with a one-time grant of coins
 * that optionally expires. The grantee can use up to SpendLimit to cover fees.
 *
 * @generated from message cosmos.feegrant.v1beta1.BasicAllowance
 */
export const BasicAllowance = proto3.makeMessageType(
  "cosmos.feegrant.v1beta1.BasicAllowance",
  () => [
    { no: 1, name: "spend_limit", kind: "message", T: Coin, repeated: true },
    { no: 2, name: "expiration", kind: "message", T: Timestamp },
  ],
);

/**
 * PeriodicAllowance extends Allowance to allow for both a maximum cap,
 * as well as a limit per time period.
 *
 * @generated from message cosmos.feegrant.v1beta1.PeriodicAllowance
 */
export const PeriodicAllowance = proto3.makeMessageType(
  "cosmos.feegrant.v1beta1.PeriodicAllowance",
  () => [
    { no: 1, name: "basic", kind: "message", T: BasicAllowance },
    { no: 2, name: "period", kind: "message", T: Duration },
    { no: 3, name: "period_spend_limit", kind: "message", T: Coin, repeated: true },
    { no: 4, name: "period_can_spend", kind: "message", T: Coin, repeated: true },
    { no: 5, name: "period_reset", kind: "message", T: Timestamp },
  ],
);

/**
 * AllowedMsgAllowance creates allowance only for specified message types.
 *
 * @generated from message cosmos.feegrant.v1beta1.AllowedMsgAllowance
 */
export const AllowedMsgAllowance = proto3.makeMessageType(
  "cosmos.feegrant.v1beta1.AllowedMsgAllowance",
  () => [
    { no: 1, name: "allowance", kind: "message", T: Any },
    { no: 2, name: "allowed_messages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * Grant is stored in the KVStore to record a grant with full context
 *
 * @generated from message cosmos.feegrant.v1beta1.Grant
 */
export const Grant = proto3.makeMessageType(
  "cosmos.feegrant.v1beta1.Grant",
  () => [
    { no: 1, name: "granter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grantee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "allowance", kind: "message", T: Any },
  ],
);

