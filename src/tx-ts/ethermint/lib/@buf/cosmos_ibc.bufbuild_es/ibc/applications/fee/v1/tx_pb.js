// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./tendermint/version/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./tendermint/types/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./tendermint/crypto/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/upgrade/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/ics23/v1/**/*_pb.js:@buf/cosmos_ics23.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file ibc/applications/fee/v1/tx.proto (package ibc.applications.fee.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Fee, PacketFee } from "./fee_pb.js";
import { PacketId } from "../../../core/channel/v1/channel_pb.js";

/**
 * MsgRegisterPayee defines the request type for the RegisterPayee rpc
 *
 * @generated from message ibc.applications.fee.v1.MsgRegisterPayee
 */
export const MsgRegisterPayee = proto3.makeMessageType(
  "ibc.applications.fee.v1.MsgRegisterPayee",
  () => [
    { no: 1, name: "port_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "relayer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "payee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgRegisterPayeeResponse defines the response type for the RegisterPayee rpc
 *
 * @generated from message ibc.applications.fee.v1.MsgRegisterPayeeResponse
 */
export const MsgRegisterPayeeResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.MsgRegisterPayeeResponse",
  [],
);

/**
 * MsgRegisterCounterpartyPayee defines the request type for the RegisterCounterpartyPayee rpc
 *
 * @generated from message ibc.applications.fee.v1.MsgRegisterCounterpartyPayee
 */
export const MsgRegisterCounterpartyPayee = proto3.makeMessageType(
  "ibc.applications.fee.v1.MsgRegisterCounterpartyPayee",
  () => [
    { no: 1, name: "port_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "relayer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "counterparty_payee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgRegisterCounterpartyPayeeResponse defines the response type for the RegisterCounterpartyPayee rpc
 *
 * @generated from message ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse
 */
export const MsgRegisterCounterpartyPayeeResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse",
  [],
);

/**
 * MsgPayPacketFee defines the request type for the PayPacketFee rpc
 * This Msg can be used to pay for a packet at the next sequence send & should be combined with the Msg that will be
 * paid for
 *
 * @generated from message ibc.applications.fee.v1.MsgPayPacketFee
 */
export const MsgPayPacketFee = proto3.makeMessageType(
  "ibc.applications.fee.v1.MsgPayPacketFee",
  () => [
    { no: 1, name: "fee", kind: "message", T: Fee },
    { no: 2, name: "source_port_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "source_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "relayers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * MsgPayPacketFeeResponse defines the response type for the PayPacketFee rpc
 *
 * @generated from message ibc.applications.fee.v1.MsgPayPacketFeeResponse
 */
export const MsgPayPacketFeeResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.MsgPayPacketFeeResponse",
  [],
);

/**
 * MsgPayPacketFeeAsync defines the request type for the PayPacketFeeAsync rpc
 * This Msg can be used to pay for a packet at a specified sequence (instead of the next sequence send)
 *
 * @generated from message ibc.applications.fee.v1.MsgPayPacketFeeAsync
 */
export const MsgPayPacketFeeAsync = proto3.makeMessageType(
  "ibc.applications.fee.v1.MsgPayPacketFeeAsync",
  () => [
    { no: 1, name: "packet_id", kind: "message", T: PacketId },
    { no: 2, name: "packet_fee", kind: "message", T: PacketFee },
  ],
);

/**
 * MsgPayPacketFeeAsyncResponse defines the response type for the PayPacketFeeAsync rpc
 *
 * @generated from message ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse
 */
export const MsgPayPacketFeeAsyncResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse",
  [],
);

