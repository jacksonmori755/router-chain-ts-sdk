// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./tendermint/version/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./tendermint/types/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./tendermint/crypto/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es,rewrite_imports=./cosmos/upgrade/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/ics23/v1/**/*_pb.js:@buf/cosmos_ics23.bufbuild_es,rewrite_imports=./cosmos/base/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/base/query/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./cosmos/auth/v1beta1/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es,rewrite_imports=./amino/**/*_pb.js:@buf/cosmos_cosmos-sdk.bufbuild_es"
// @generated from file ibc/applications/fee/v1/query.proto (package ibc.applications.fee.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { PageRequest, PageResponse } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/query/v1beta1/pagination_pb.js";
import { IdentifiedPacketFees } from "./fee_pb.js";
import { PacketId } from "../../../core/channel/v1/channel_pb.js";
import { Coin } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/v1beta1/coin_pb.js";
import { FeeEnabledChannel } from "./genesis_pb.js";

/**
 * QueryIncentivizedPacketsRequest defines the request type for the IncentivizedPackets rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryIncentivizedPacketsRequest
 */
export const QueryIncentivizedPacketsRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryIncentivizedPacketsRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
    { no: 2, name: "query_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPackets rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryIncentivizedPacketsResponse
 */
export const QueryIncentivizedPacketsResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryIncentivizedPacketsResponse",
  () => [
    { no: 1, name: "incentivized_packets", kind: "message", T: IdentifiedPacketFees, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryIncentivizedPacketRequest defines the request type for the IncentivizedPacket rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryIncentivizedPacketRequest
 */
export const QueryIncentivizedPacketRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryIncentivizedPacketRequest",
  () => [
    { no: 1, name: "packet_id", kind: "message", T: PacketId },
    { no: 2, name: "query_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPacket rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryIncentivizedPacketResponse
 */
export const QueryIncentivizedPacketResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryIncentivizedPacketResponse",
  () => [
    { no: 1, name: "incentivized_packet", kind: "message", T: IdentifiedPacketFees },
  ],
);

/**
 * QueryIncentivizedPacketsForChannelRequest defines the request type for querying for all incentivized packets
 * for a specific channel
 *
 * @generated from message ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest
 */
export const QueryIncentivizedPacketsForChannelRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
    { no: 2, name: "port_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "query_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * QueryIncentivizedPacketsResponse defines the response type for the incentivized packets RPC
 *
 * @generated from message ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse
 */
export const QueryIncentivizedPacketsForChannelResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse",
  () => [
    { no: 1, name: "incentivized_packets", kind: "message", T: IdentifiedPacketFees, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryTotalRecvFeesRequest defines the request type for the TotalRecvFees rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryTotalRecvFeesRequest
 */
export const QueryTotalRecvFeesRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryTotalRecvFeesRequest",
  () => [
    { no: 1, name: "packet_id", kind: "message", T: PacketId },
  ],
);

/**
 * QueryTotalRecvFeesResponse defines the response type for the TotalRecvFees rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryTotalRecvFeesResponse
 */
export const QueryTotalRecvFeesResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryTotalRecvFeesResponse",
  () => [
    { no: 1, name: "recv_fees", kind: "message", T: Coin, repeated: true },
  ],
);

/**
 * QueryTotalAckFeesRequest defines the request type for the TotalAckFees rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryTotalAckFeesRequest
 */
export const QueryTotalAckFeesRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryTotalAckFeesRequest",
  () => [
    { no: 1, name: "packet_id", kind: "message", T: PacketId },
  ],
);

/**
 * QueryTotalAckFeesResponse defines the response type for the TotalAckFees rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryTotalAckFeesResponse
 */
export const QueryTotalAckFeesResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryTotalAckFeesResponse",
  () => [
    { no: 1, name: "ack_fees", kind: "message", T: Coin, repeated: true },
  ],
);

/**
 * QueryTotalTimeoutFeesRequest defines the request type for the TotalTimeoutFees rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest
 */
export const QueryTotalTimeoutFeesRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest",
  () => [
    { no: 1, name: "packet_id", kind: "message", T: PacketId },
  ],
);

/**
 * QueryTotalTimeoutFeesResponse defines the response type for the TotalTimeoutFees rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse
 */
export const QueryTotalTimeoutFeesResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse",
  () => [
    { no: 1, name: "timeout_fees", kind: "message", T: Coin, repeated: true },
  ],
);

/**
 * QueryPayeeRequest defines the request type for the Payee rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryPayeeRequest
 */
export const QueryPayeeRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryPayeeRequest",
  () => [
    { no: 1, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "relayer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryPayeeResponse defines the response type for the Payee rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryPayeeResponse
 */
export const QueryPayeeResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryPayeeResponse",
  () => [
    { no: 1, name: "payee_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryCounterpartyPayeeRequest defines the request type for the CounterpartyPayee rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryCounterpartyPayeeRequest
 */
export const QueryCounterpartyPayeeRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryCounterpartyPayeeRequest",
  () => [
    { no: 1, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "relayer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryCounterpartyPayeeResponse defines the response type for the CounterpartyPayee rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryCounterpartyPayeeResponse
 */
export const QueryCounterpartyPayeeResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryCounterpartyPayeeResponse",
  () => [
    { no: 1, name: "counterparty_payee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryFeeEnabledChannelsRequest defines the request type for the FeeEnabledChannels rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest
 */
export const QueryFeeEnabledChannelsRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
    { no: 2, name: "query_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * QueryFeeEnabledChannelsResponse defines the response type for the FeeEnabledChannels rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse
 */
export const QueryFeeEnabledChannelsResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse",
  () => [
    { no: 1, name: "fee_enabled_channels", kind: "message", T: FeeEnabledChannel, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryFeeEnabledChannelRequest defines the request type for the FeeEnabledChannel rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryFeeEnabledChannelRequest
 */
export const QueryFeeEnabledChannelRequest = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryFeeEnabledChannelRequest",
  () => [
    { no: 1, name: "port_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryFeeEnabledChannelResponse defines the response type for the FeeEnabledChannel rpc
 *
 * @generated from message ibc.applications.fee.v1.QueryFeeEnabledChannelResponse
 */
export const QueryFeeEnabledChannelResponse = proto3.makeMessageType(
  "ibc.applications.fee.v1.QueryFeeEnabledChannelResponse",
  () => [
    { no: 1, name: "fee_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

